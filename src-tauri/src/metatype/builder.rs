use crate::metatype::types::*;

pub struct MetatypeBuilder {
    pub name: String,
    pub body_min: i32,
    pub body_max: i32,
    pub agility_min: i32,
    pub agility_max: i32,
    pub reaction_min: i32,
    pub reaction_max: i32,
    pub strength_min: i32,
    pub strength_max: i32,
    pub willpower_min: i32,
    pub willpower_max: i32,
    pub logic_min: i32,
    pub logic_max: i32,
    pub intuition_min: i32,
    pub intuition_max: i32,
    pub charisma_min: i32,
    pub charisma_max: i32,
    pub edge_min: i32,
    pub edge_max: i32,
    pub magical_type: MagicalType,
    pub magic_min: i32,
    pub magic_max: i32,
    pub resonance_min: i32,
    pub resonance_max: i32,
}

#[allow(dead_code)]
impl MetatypeBuilder {
    pub fn new() -> Self {
        Self {
            name: String::new(),
            body_min: 1,
            body_max: 6,
            agility_min: 1,
            agility_max: 6,
            reaction_min: 1,
            reaction_max: 6,
            strength_min: 1,
            strength_max: 6,
            willpower_min: 1,
            willpower_max: 6,
            logic_min: 1,
            logic_max: 6,
            intuition_min: 1,
            intuition_max: 6,
            charisma_min: 1,
            charisma_max: 6,
            edge_min: 1,
            edge_max: 6,
            magical_type: MagicalType::Mundane,
            magic_min: 0,
            magic_max: 0,
            resonance_min: 0,
            resonance_max: 0,
        }
    }

    crate::builder_setters! {
    name: String,
    body_min: i32,
    body_max: i32,
    agility_min: i32,
    agility_max: i32,
    reaction_min: i32,
    reaction_max: i32,
    strength_min: i32,
    strength_max: i32,
    willpower_min: i32,
    willpower_max: i32,
    logic_min: i32,
    logic_max: i32,
    intuition_min: i32,
    intuition_max: i32,
    charisma_min: i32,
    charisma_max: i32,
    edge_min: i32,
    edge_max: i32,
    magical_type: MagicalType,
    magic_min: i32,
    magic_max: i32,
    resonance_min: i32,
    resonance_max: i32,
    }
}
