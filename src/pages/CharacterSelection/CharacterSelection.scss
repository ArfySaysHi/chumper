@use "sass:map";
@use "../../styles/globals/_variables.scss" as *;
@use "../../styles/globals/_mixins.scss" as *;

.character-selection {
    min-height: 100vh;
    background: surface(app);
    color: text(primary);
    font-family: $font-family-primary;
    position: relative;
    overflow-x: hidden;

    &__header {
        position: relative;
        @include flex-between;
        padding: map.get($spacing, 6);
        border-bottom: 1px solid border(subtle);
        backdrop-filter: blur(8px);
        background: rgba(surface(app), 0.8);
    }

    &__brand {
        @include flex-center;
        gap: spacing(4);
    }

    &__title {
        @include text-style(4xl, black, tight);
        font-family: $font-family-display;
        color: color(primary-500);
        margin: 0;
    }

    &__version {
        @include text-style(sm, regular, normal);
        color: text(tertiary);
        background: surface(secondary);
        padding: map.get($spacing, 1) map.get($spacing, 2);
        border-radius: map.get($border-radius, base);
        border: 1px solid border(subtle);
    }

    &__toolbar {
        display: flex;
        gap: spacing(2);
    }

    &__main {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: spacing(8);
        position: relative;
        padding: map.get($spacing, 8) 0;
        transition: all 1s ease;
    }

    &__creation_type {
        &__header {
            margin: 0 0 spacing(10) 0;
        }
    }

    &__characters {
        margin-bottom: map.get($spacing, 8);
    }

    &__actions {
        display: flex;
        justify-content: center;
    }
}

.character-grid {
    @include grid-auto-fit(320px, spacing(6));
    margin: spacing(8) 0 0 0;

    // When only 1-2 cards, limit width further
    &:has(.character-card:nth-child(1):nth-last-child(1)) {
        max-width: 400px;
    }

    &:has(.character-card:nth-child(2):nth-last-child(1)) {
        max-width: 800px;
    }
}

.archetype {
    &--decker {
        background: linear-gradient(135deg, color(info-600), color(info-500));
        color: color(text-on-primary);
    }

    &--samurai {
        background: linear-gradient(
            135deg,
            color(danger-600),
            color(danger-500)
        );
        color: color(text-on-primary);
    }

    &--mage {
        background: linear-gradient(135deg, #8b5cf6, #a855f7);
        color: color(text-on-primary);
    }

    &--rigger {
        background: linear-gradient(
            135deg,
            color(accent-600),
            color(accent-500)
        );
        color: color(text-inverse);
    }

    &--adept {
        background: linear-gradient(
            135deg,
            color(success-600),
            color(success-500)
        );
        color: color(text-on-primary);
    }

    &--face {
        background: linear-gradient(135deg, #ec4899, #f472b6);
        color: color(text-on-primary);
    }

    &--default {
        background: surface(tertiary);
        color: text(primary);
    }
}

.stat-item {
    display: flex;
    align-items: center;
    gap: spacing(2);

    &__icon {
        width: 16px;
        height: 16px;

        &--karma {
            color: color(accent-500);
        }

        &--nuyen {
            color: color(success-500);
        }
    }

    &__label {
        @include text-style(xs, regular, normal);
        color: text(tertiary);
    }

    &__value {
        @include text-style(sm, semibold, normal);
        font-family: $font-family-mono;
    }
}

.action-buttons {
    display: flex;
    gap: spacing(4);
    justify-content: center;
}

@include respond-to(lg) {
    .character-selection__main {
        padding: spacing(12) spacing(4);
    }

    .character-grid {
        @include grid-auto-fit(360px, spacing(8));
    }
}
